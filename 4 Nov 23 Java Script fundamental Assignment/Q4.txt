Operator Precedence and Associativity in JavaScript
Precedence determines the order in which operators are evaluated in an expression when multiple operators are involved. 
Operators with higher precedence are executed before those with lower precedence.
Example:
In the expression 3 + 5 * 2, multiplication (*) has a higher precedence than addition (+), 
so the multiplication is performed first. The result is 3 + 10 = 13.

Associativity defines the direction in which operators of the same precedence level are evaluated.

Left-to-right associativity means operators are evaluated from left to right.

Right-to-left associativity means evaluation proceeds from right to left.
For instance, the assignment operator (=) is right-to-left associative: